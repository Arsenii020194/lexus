/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-custom:src/main/java/entity/Entity.e.vm.java
 */
package ru.ssau.lexus.domain.entity;

import static javax.persistence.FetchType.LAZY;
import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.Objects;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Type;
import org.hibernate.validator.constraints.NotEmpty;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Entity
@Table(schema = "md", name = "\"user\"")
public class User implements Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(User.class);

    // Raw attributes
    private Long id;
    private String name;
    private String password;
    private byte[] image;
    private LocalDate dateBirth;

    // Many to one
    private Group idGroup;
    // -- [id] ------------------------

    @Column(name = "id", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public User id(Long id) {
        setId(id);
        return this;
    }

    // -- [name] ------------------------

    @NotEmpty
    @Size(max = 2147483647)
    @Column(name = "name", nullable = false, length = 2147483647)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public User name(String name) {
        setName(name);
        return this;
    }
    // -- [password] ------------------------

    @NotEmpty
    @Size(max = 2147483647)
    @Column(name = "\"password\"", nullable = false, length = 2147483647)
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public User password(String password) {
        setPassword(password);
        return this;
    }
    // -- [image] ------------------------

    @Basic(fetch = LAZY)
    @Column(name = "image")
    @Lob
    @Type(type="org.hibernate.type.BinaryType")
    public byte[] getImage() {
        return image;
    }

    public void setImage(byte[] image) {
        this.image = image;
    }

    public User image(byte[] image) {
        setImage(image);
        return this;
    }
    // -- [dateBirth] ------------------------

    @NotNull
    @Column(name = "date_birth", nullable = false, length = 13)
    public LocalDate getDateBirth() {
        return dateBirth;
    }

    public void setDateBirth(LocalDate dateBirth) {
        this.dateBirth = dateBirth;
    }

    public User dateBirth(LocalDate dateBirth) {
        setDateBirth(dateBirth);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: User.idGroup ==> Group.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "id_group")
    @ManyToOne(fetch = LAZY)
    public Group getIdGroup() {
        return idGroup;
    }

    /**
     * Set the {@link #idGroup} without adding this User instance on the passed {@link #idGroup}
     */
    public void setIdGroup(Group idGroup) {
        this.idGroup = idGroup;
    }

    public User idGroup(Group idGroup) {
        setIdGroup(idGroup);
        return this;
    }

    /**
     * Apply the default values.
     */
    public User withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof User && hashCode() == other.hashCode());
    }

    ;

    @Override
    public int hashCode() {
        return Objects.hash(this);
    }

    /**
     * Construct a readable string representation for this User instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return "User{" //
                + "id" + getId() //
                + "name" + getName() //
                + "password" + "XXXX" //
                + "image" + getImage() //
                + "dateBirth" + getDateBirth() //
                + "}";
    }
}
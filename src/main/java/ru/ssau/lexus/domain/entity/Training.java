/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-custom:src/main/java/entity/Entity.e.vm.java
 */
package ru.ssau.lexus.domain.entity;

import static javax.persistence.FetchType.LAZY;
import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Entity
@Table(schema = "md", name = "training")
public class Training implements Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(Training.class);

    // Raw attributes
    private Long id;
    private LocalDate dateTraining;
    private Long price;

    // Many to one
    private User idClient;
    private User idTrainer;
    private TrainingType idType;
    private TrainingStatus idStatus;
    // -- [id] ------------------------

    @Column(name = "id", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Training id(Long id) {
        setId(id);
        return this;
    }

    // -- [dateTraining] ------------------------

    @NotNull
    @Column(name = "date_training", nullable = false, length = 13)
    public LocalDate getDateTraining() {
        return dateTraining;
    }

    public void setDateTraining(LocalDate dateTraining) {
        this.dateTraining = dateTraining;
    }

    public Training dateTraining(LocalDate dateTraining) {
        setDateTraining(dateTraining);
        return this;
    }
    // -- [price] ------------------------

    @Digits(integer = 19, fraction = 0)
    @Column(name = "price", precision = 19)
    public Long getPrice() {
        return price;
    }

    public void setPrice(Long price) {
        this.price = price;
    }

    public Training price(Long price) {
        setPrice(price);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Training.idClient ==> User.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "id_client")
    @ManyToOne(fetch = LAZY)
    public User getIdClient() {
        return idClient;
    }

    /**
     * Set the {@link #idClient} without adding this Training instance on the passed {@link #idClient}
     */
    public void setIdClient(User idClient) {
        this.idClient = idClient;
    }

    public Training idClient(User idClient) {
        setIdClient(idClient);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Training.idTrainer ==> User.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "id_trainer")
    @ManyToOne(fetch = LAZY)
    public User getIdTrainer() {
        return idTrainer;
    }

    /**
     * Set the {@link #idTrainer} without adding this Training instance on the passed {@link #idTrainer}
     */
    public void setIdTrainer(User idTrainer) {
        this.idTrainer = idTrainer;
    }

    public Training idTrainer(User idTrainer) {
        setIdTrainer(idTrainer);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Training.idType ==> TrainingType.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "id_type")
    @ManyToOne(fetch = LAZY)
    public TrainingType getIdType() {
        return idType;
    }

    /**
     * Set the {@link #idType} without adding this Training instance on the passed {@link #idType}
     */
    public void setIdType(TrainingType idType) {
        this.idType = idType;
    }

    public Training idType(TrainingType idType) {
        setIdType(idType);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Training.idStatus ==> TrainingStatus.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "id_status")
    @ManyToOne(fetch = LAZY)
    public TrainingStatus getIdStatus() {
        return idStatus;
    }

    /**
     * Set the {@link #idStatus} without adding this Training instance on the passed {@link #idStatus}
     */
    public void setIdStatus(TrainingStatus idStatus) {
        this.idStatus = idStatus;
    }

    public Training idStatus(TrainingStatus idStatus) {
        setIdStatus(idStatus);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Training withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Training && hashCode() == other.hashCode());
    }

    ;

    @Override
    public int hashCode() {
        return Objects.hash(this);
    }

    /**
     * Construct a readable string representation for this Training instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return "Training{" //
                + "id" + getId() //
                + "dateTraining" + getDateTraining() //
                + "price" + getPrice() //
                + "}";
    }
}